@page "/register"

@inject IClientService service
@inject IJSRuntime js
<EditForm Model="RegisterModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">Login</div>
        <div class="card-body">
            <div class="form-group">
                <label class="form-label"> Name</label>
                <InputText class="form-control" @bind-Value="RegisterModel.Name"></InputText>
            </div>
            <div class="form-group mt-2">
                <label class="form-label"> Email Address</label>
                <InputText class="form-control" @bind-Value="RegisterModel.Email"></InputText>
            </div>
            <div class="form-group mt-2">
                <label class="form-label"> Password</label>
                <InputText class="form-control" @bind-Value="RegisterModel.Password"></InputText>
            </div>
            <div class="form-group mt-2">
                <label class="form-label">Confirm Password</label>
                <InputText class="form-control" @bind-Value="RegisterModel.ConfirmPassword"></InputText>

            </div>
            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary float-end">Register</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private RegisterModel RegisterModel { get; set; } = new();
    private async Task HandleRegister()
    {
        var result = await service.RegisterAccountAsync(RegisterModel);
        await js.InvokeVoidAsync("alert", result);

    }
}